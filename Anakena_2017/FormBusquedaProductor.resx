<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABFAMMDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        /KKKKACivB/+Cm/7V8f7Ev7B/wATPiQJkh1LQ9Hki0nd/HqE5EFoMdwJpIyQP4VY9q+L/wDg1w/4KDeI
        v2tf2ZfGXgnx74o1rxX42+H+rLdJqGs6hLe313p14C0e6WVmkk8uaOdcknarxLwMUAfqRRRRQAUUUUAF
        FFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFfi/wD8HIf/AAVq8afsn/tjfB3wb8N/E2saRL4JMXi3xLa6
        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
        BRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAH//Z
</value>
  </data>
</root>